//
//  AesCtrTests.swift
//  CryptomatorCryptoLibTests
//
//  Created by Sebastian Stenzel on 06.06.20.
//  Copyright Â© 2020 Skymatic GmbH. All rights reserved.
//

import XCTest
@testable import CryptomatorCryptoLib

// test vectors F5.5 and F5.6 from https://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-38a.pdf
class AesCtrTests: XCTestCase {
	let key: [UInt8] = [
		0x60, 0x3D, 0xEB, 0x10, 0x15, 0xCA, 0x71, 0xBE,
		0x2B, 0x73, 0xAE, 0xF0, 0x85, 0x7D, 0x77, 0x81,
		0x1F, 0x35, 0x2C, 0x07, 0x3B, 0x61, 0x08, 0xD7,
		0x2D, 0x98, 0x10, 0xA3, 0x09, 0x14, 0xDF, 0xF4
	]

	let iv: [UInt8] = [
		0xF0, 0xF1, 0xF2, 0xF3, 0xF4, 0xF5, 0xF6, 0xF7,
		0xF8, 0xF9, 0xFA, 0xFB, 0xFC, 0xFD, 0xFE, 0xFF
	]

	let plaintext: [UInt8] = [
		0x6B, 0xC1, 0xBE, 0xE2, 0x2E, 0x40, 0x9F, 0x96,
		0xE9, 0x3D, 0x7E, 0x11, 0x73, 0x93, 0x17, 0x2A,
		0xAE, 0x2D, 0x8A, 0x57, 0x1E, 0x03, 0xAC, 0x9C,
		0x9E, 0xB7, 0x6F, 0xAC, 0x45, 0xAF, 0x8E, 0x51,
		0x30, 0xC8, 0x1C, 0x46, 0xA3, 0x5C, 0xE4, 0x11,
		0xE5, 0xFB, 0xC1, 0x19, 0x1A, 0x0A, 0x52, 0xEF,
		0xF6, 0x9F, 0x24, 0x45, 0xDF, 0x4F, 0x9B, 0x17,
		0xAD, 0x2B, 0x41, 0x7B, 0xE6, 0x6C, 0x37, 0x10
	]

	let ciphertext: [UInt8] = [
		0x60, 0x1E, 0xC3, 0x13, 0x77, 0x57, 0x89, 0xA5,
		0xB7, 0xA7, 0xF5, 0x04, 0xBB, 0xF3, 0xD2, 0x28,
		0xF4, 0x43, 0xE3, 0xCA, 0x4D, 0x62, 0xB5, 0x9A,
		0xCA, 0x84, 0xE9, 0x90, 0xCA, 0xCA, 0xF5, 0xC5,
		0x2B, 0x09, 0x30, 0xDA, 0xA2, 0x3D, 0xE9, 0x4C,
		0xE8, 0x70, 0x17, 0xBA, 0x2D, 0x84, 0x98, 0x8D,
		0xDF, 0xC9, 0xC5, 0x8D, 0xB6, 0x7A, 0xAD, 0xA6,
		0x13, 0xC2, 0xDD, 0x08, 0x45, 0x79, 0x41, 0xA6
	]

	func testEncrypt() {
		let result = try? AesCtr.compute(key: key, iv: iv, data: plaintext)
		XCTAssertEqual(ciphertext, result)
	}

	func testDecrypt() {
		let result = try? AesCtr.compute(key: key, iv: iv, data: ciphertext)
		XCTAssertEqual(plaintext, result)
	}
}
